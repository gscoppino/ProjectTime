# This is an Anaconda project file.
# It describes the project and how it can be run.
# The file is in YAML format, please see http://www.yaml.org/start.html for more.

name: ProjectTime

# lists runnable scripts, notebooks, and other code.
commands:
  install:
    description: execute pip install -e to install the project into the development environment.
    unix: python -m scripts.dev_install
    env_spec: default
  postgres:
    description: execute postgres
    unix: postgres
    env_spec: database
  pg_ctl:
    description: execute pg_ctl
    unix: pg_ctl
    env_spec: database
  pg_dump:
    description: execute pg_dump
    unix: pg_dump
    env_spec: database
  psql:
    description: execute psql
    unix: psql
    env_spec: database
  django-admin:
    description: execute django-admin
    unix: python -m scripts.dev_install && django-admin
    env_spec: application
  manage.py:
    description: execute manage.py
    unix: python -m scripts.dev_install && cd src/ProjectTime && python -Wa manage.py
    env_spec: application
  autopep8:
    description: execute autopep8
    unix: autopep8
    env_spec: lint
  isort:
    description: execute isort
    unix: isort
    env_spec: lint
  pylint:
    description: execute pylint
    unix: python -m scripts.dev_install && pylint --rcfile=setup.cfg
    env_spec: lint
  coverage:
    description: execute coverage
    unix: python -m scripts.dev_install && cd src/ProjectTime && coverage
    env_spec: test
  robot:
    description: execute robot
    unix: robot
    env_spec: test-acceptance
  robot.tidy:
    description: execute robot.tidy
    unix: python -m robot.tidy
    env_spec: test-acceptance
  jupyter:
    description: execute jupyter
    unix: python -m scripts.dev_install && jupyter
    env_spec: default
  setup.py:
    description: execute setup.py
    unix: python setup.py
    env_spec: build-pypi
  conda:
    description: execute conda
    unix: conda
    env_spec: conda

#
# In the variables section, list any environment variables your code depends on.
# Use `anaconda-project add-variable` to add variables.
#
variables:
  PGDATA:
    default: db
    description: Where PostgreSQL local database files are stored
  DJANGO_SETTINGS_MODULE:
    default: ProjectTime.config.settings
    description: Which Django settings file to use

# list the channels that are used to install packages
channels:
  - conda-forge

# lists platforms the project should work on
platforms:
  - linux-64
  - osx-64
  - win-64

# Multiple, named environment specs can be defined.
# Each inherits any global packages or channels,
# but can have its own unique ones also.
env_specs:
  _python:
    packages:
      - python=3.8
      - pip
  _notebook:
    inherit_from:
      - _python
    packages:
      - notebook
  default:
    inherit_from:
      - _python
      - _notebook
      - application-debug
      - lint
      - test
      - test-acceptance
    packages:
      - anaconda-project
      - doit
  database:
    packages:
      - postgresql=12.3
  application:
    inherit_from:
      - _python
    packages:
      - psycopg2=2.8
      - sqlparse=0.3
      - pytz=2019.3
      - django=3.1
      - pandas=1.0
      - bokeh=2.1
  application-debug:
    inherit_from:
      - _python
      - application
    packages:
      - django-debug-toolbar=3.1
  lint:
    inherit_from:
      - _python
      - application
    packages:
      - isort
      - pylint
      - pep8
      - autopep8
  test:
    inherit_from:
      - _python
      - application
    packages:
      - coverage
  test-acceptance:
    inherit_from:
      - _python
    packages:
      - robotframework
      - robotframework-seleniumlibrary
      - python-chromedriver-binary<81
      - geckodriver
  build-pypi:
    inherit_from:
      - _python
    packages:
      - setuptools
  conda:
    inherit_from:
      - _python
      - build-pypi
    packages:
      - conda
      - conda-build
      - conda-verify
